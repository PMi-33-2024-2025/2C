// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _2C.DataAccess;

#nullable disable

namespace _2C.DataAccess.Migrations
{
    [DbContext(typeof(_2CDbContext))]
    [Migration("20241028185113_StorageNullabilities")]
    partial class StorageNullabilities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_2C.DataAccess.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long>("StorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StorageId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27d3fa15-7a6d-4f5a-8436-1f0b2fced642"),
                            Name = "Banana",
                            Price = 40.0,
                            Quantity = 100000,
                            StorageId = 1L
                        },
                        new
                        {
                            Id = new Guid("926ca070-af63-4474-8d07-439b5ea17b43"),
                            Name = "Apple",
                            Price = 25.0,
                            Quantity = 200000,
                            StorageId = 2L
                        },
                        new
                        {
                            Id = new Guid("883cf1ef-e8f0-46c2-826f-f08a32bfcae6"),
                            Name = "Tomato",
                            Price = 70.0,
                            Quantity = 40000,
                            StorageId = 1L
                        },
                        new
                        {
                            Id = new Guid("f25798a4-0111-4070-a872-e5092fedb435"),
                            Name = "Cucumber",
                            Price = 60.0,
                            Quantity = 250000,
                            StorageId = 2L
                        });
                });

            modelBuilder.Entity("_2C.DataAccess.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("_2C.DataAccess.Models.Storage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Storages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Lviv"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Kyiv"
                        });
                });

            modelBuilder.Entity("_2C.DataAccess.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<long>("StorageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("StorageId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f69ed69-4757-4875-bbd2-f2925f1ad4ab"),
                            Email = "max@gmail.com",
                            LastName = "Doe",
                            Name = "Max",
                            Password = "12345678",
                            RoleId = 2,
                            StorageId = 2L
                        },
                        new
                        {
                            Id = new Guid("227a5a5c-98f6-45d5-8628-7b53240695e5"),
                            Email = "andrii@gmail.com",
                            LastName = "Shevchenko",
                            Name = "Andrii",
                            Password = "abcd1234",
                            RoleId = 1,
                            StorageId = 2L
                        },
                        new
                        {
                            Id = new Guid("23c14957-7d7e-47e0-9ca4-7aba886f2c4d"),
                            Email = "pavlo@gmail.com",
                            LastName = "Ivanov",
                            Name = "Pavlo",
                            Password = "abcdefgh",
                            RoleId = 2,
                            StorageId = 1L
                        },
                        new
                        {
                            Id = new Guid("13ae9e21-62ae-4c89-8b48-318b9629714d"),
                            Email = "bohdan@gmail.com",
                            LastName = "Ostrovskyi",
                            Name = "Bohdan",
                            Password = "abcd1234",
                            RoleId = 1,
                            StorageId = 1L
                        });
                });

            modelBuilder.Entity("_2C.DataAccess.Models.Product", b =>
                {
                    b.HasOne("_2C.DataAccess.Models.Storage", "Storage")
                        .WithMany("Products")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("_2C.DataAccess.Models.User", b =>
                {
                    b.HasOne("_2C.DataAccess.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2C.DataAccess.Models.Storage", "Storage")
                        .WithMany("Users")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("_2C.DataAccess.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("_2C.DataAccess.Models.Storage", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
